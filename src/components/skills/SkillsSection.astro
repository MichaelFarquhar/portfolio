---
import SkillCategory from './SkillCategory.astro';
import skills from '../../skills';

import { Icon } from 'astro-icon/components';
---

<section id="skills" class="mt-24 md:mt-36">
    <h2 class="text-4xl w-full font-bold mb-8">Technical Skills</h2>

    <div id="skills-parent">
        <div class="mb-14 text-neutral-content">
            I've worked with a wide range of programming languages and frameworks, both in
            my professional <span
                class="text-primary font-bold hover:text-primary-focus cursor-pointer animate-pulse"
                id="work-span-hover">career</span
            > and in my <span
                class="text-primary font-bold hover:text-primary-focus cursor-pointer animate-pulse"
                id="personal-span-hover">personal/freelance</span
            > projects. My wide range of experience has equipped me with the ability to handle
            a variety of projects, but also how to quickly pick up new skills whenever the
            need arises.
        </div>
        <SkillCategory title="Languages" skills={skills.languages}>
            <Icon name="heroicons:code-bracket-square-solid" class="w-5 h-5" />
        </SkillCategory>
        <SkillCategory title="Frameworks & Packages" skills={skills.frameworks}>
            <Icon name="heroicons:cube-solid" class="w-5 h-5" />
        </SkillCategory>
        <SkillCategory title="Software & Tools" skills={skills.software}>
            <Icon name="heroicons:wrench-solid" class="w-5 h-5" />
        </SkillCategory>
    </div>
</section>

<script>
    // Select all images where the data-type attribute is "work" / "personal"
    const workSkills = document.querySelectorAll('img[data-type="work"]');
    const personalSkills = document.querySelectorAll('img[data-type="personal"]');

    const workHoverElement = document.querySelector('#work-span-hover');
    const personalHoverElement = document.querySelector('#personal-span-hover');

    const classStrings = ['opacity-20', 'grayscale'];

    // Handle event listeneners for hovering over spans
    personalHoverElement.addEventListener('mouseover', () => {
        workSkills.forEach((el) => el.classList.add(...classStrings));
    });
    personalHoverElement.addEventListener('mouseout', () => {
        workSkills.forEach((el) => el.classList.remove(...classStrings));
    });
    workHoverElement.addEventListener('mouseover', () => {
        personalSkills.forEach((el) => el.classList.add(...classStrings));
    });
    workHoverElement.addEventListener('mouseout', () => {
        personalSkills.forEach((el) => el.classList.remove(...classStrings));
    });
</script>
