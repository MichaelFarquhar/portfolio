---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import SideBar from '../components/sidebar/SideBar.astro';

import { SITE_TITLE, SITE_DESCRIPTION } from '../config';

const { image, title = SITE_TITLE, description = SITE_DESCRIPTION } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" data-theme="halloween" id="html">
    <head>
        <BaseHead title={title} description={description} image={image} />
    </head>
    <body>
        <!-- Skip navigation link -->
        <a class="skip-nav" href="#main-content">Skip to main content</a>

        <div class="bg-base-100 drawer drawer-mobile">
            <input id="my-drawer" type="checkbox" class="drawer-toggle" />
            <div class="drawer-content flex flex-col bg-base-100">
                <Header title={SITE_TITLE} />
                <div class="hidden md:flex justify-end pt-8 px-12">
                    <button class="theme-switch btn btn-secondary gap-2">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            class="w-5 h-5"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M4.098 19.902a3.75 3.75 0 005.304 0l6.401-6.402M6.75 21A3.75 3.75 0 013 17.25V4.125C3 3.504 3.504 3 4.125 3h5.25c.621 0 1.125.504 1.125 1.125v4.072M6.75 21a3.75 3.75 0 003.75-3.75V8.197M6.75 21h13.125c.621 0 1.125-.504 1.125-1.125v-5.25c0-.621-.504-1.125-1.125-1.125h-4.072M10.5 8.197l2.88-2.88c.438-.439 1.15-.439 1.59 0l3.712 3.713c.44.44.44 1.152 0 1.59l-2.879 2.88M6.75 17.25h.008v.008H6.75v-.008z"
                            ></path>
                        </svg>
                        New Theme
                    </button>
                </div>
                <div class="md:flex md:justify-center">
                    <main class="p-6 pt-10 max-w-[900px]" id="main-content">
                        <slot />
                    </main>
                </div>
                <Footer />
            </div>
            <SideBar />
        </div>
        <script>
            const htmlTag = document.getElementById('html');
            const themes = [
                'light',
                'dark',
                'cupcake',
                'bumblebee',
                'emerald',
                'corporate',
                'synthwave',
                'retro',
                'cyberpunk',
                'valentine',
                'halloween',
                'garden',
                'forest',
                'aqua',
                'lofi',
                'pastel',
                'fantasy',
                'wireframe',
                'black',
                'luxury',
                'dracula',
                'cmyk',
                'autumn',
                'business',
                'acid',
                'lemonade',
                'night',
                'coffee',
                'winter',
            ];

            let selectedTheme = htmlTag.getAttribute('data-theme');

            const randomizeTheme = () => {
                // Get all other themes to avoid randomizing the currently selected one
                const restOfThemes = themes.filter((theme) => theme != selectedTheme);

                selectedTheme =
                    restOfThemes[Math.floor(Math.random() * restOfThemes.length)];
                htmlTag.setAttribute('data-theme', selectedTheme);
            };

            document.querySelectorAll('.theme-switch').forEach((element) => {
                element.addEventListener('click', () => {
                    randomizeTheme();
                });
            });
        </script>
    </body>
</html>

<!-- <script>
    const mainContent = document.querySelector('.drawer-content');
    const sections = document.querySelectorAll('section');
    const navItems = document.querySelectorAll('.nav-item');
    let current = '';

    mainContent.addEventListener('scroll', () => {
        console.log('scrolling');
        sections.forEach((section) => {
            const sectionTop = section.offsetTop;

            if (mainContent.scrollTop + 50 >= sectionTop) {
                console.log('hey');
                current = section.getAttribute('id');
            }
        });

        navItems.forEach((li) => {
            console.log(li);
            li.classList.remove('active');
            if (li.getAttribute('data-section') === current) {
                li.classList.add('active');
            }
        });
    });
</script> -->

<style>
    .skip-nav {
        position: absolute;
        top: -40px;
        left: 0;
        width: 1px;
        height: 1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
    }
</style>
